{"version":3,"sources":["Assets/earth-dark.jpg","Assets/earth-topology.png","Examples/ExamplesContainer.js","Examples/Components/Cube.js","Examples/Components/Line.js","Examples/Components/Globe.js","Examples/Components/Marker.js","Examples/index.js","View.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExamplesContainer","to","React","Component","CubeContainer","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","cube","rotation","x","y","renderScene","window","renderer","render","scene","camera","width","innerWidth","height","innerHeight","this","THREE","position","z","antialias","setClearColor","setSize","mount","appendChild","domElement","geometry","material","color","wireframe","add","removeChild","className","style","ref","LineContainer","set","vertices","push","line","OrbitControls","require","directionalLight","light","texture","load","imge","texture2","imge2","map","bumpMap","bumpScale","Marker","lat","lng","index","call","linewidth","linecap","linejoin","cone","Math","PI","userData","Earth","radius","earth","prototype","Object","create","createMarker","lon","marker","latRad","lonRad","r","cos","sin","onmousemove","event","rect","getBoundingClientRect","left","clientX","top","clientY","raycaster","ray","origin","setFromMatrixPosition","matrixWorld","direction","unproject","sub","normalize","intersects","intersectObjects","children","length","object","type","clicked","setHex","addEventListener","match","path","component","Line","Cube","Globe","ExampleContainer","ViewContainer","App","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","href","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6dce1b8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth-dark.646e6417.jpg\";","module.exports = __webpack_public_path__ + \"static/media/earth-topology.56e5c068.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass ExamplesContainer extends React.Component {\n    render(){\n        return(\n            <div>\n                EXAMPLE CONTAINER\n                <div>\n                    <Link to={\"examples/cube\"} > Cube Example</Link>\n                    <Link to={\"examples/line\"} > Line Example</Link>\n                    <Link to={\"examples/globe\"} > Globe Example</Link>\n                    <Link to={\"examples/marker\"} > Globe Marker Example</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExamplesContainer;","import React from \"react\";\nimport * as THREE from \"three\";\n\nclass CubeContainer extends React.Component {\n    componentDidMount(){\n        const width =  window.innerWidth//this.mount.clientWidth\n        const height = window.innerHeight//this.mount.clientHeight\n        //ADD SCENE\n        this.scene = new THREE.Scene()\n        //ADD CAMERA\n        this.camera = new THREE.PerspectiveCamera(\n          75,\n          width / height,\n          0.1,\n          1000\n        )\n        this.camera.position.z = 4\n        //ADD RENDERER\n        this.renderer = new THREE.WebGLRenderer({ antialias: true })\n        this.renderer.setClearColor('#000000')\n        this.renderer.setSize(width, height)\n        this.mount.appendChild(this.renderer.domElement)\n        //ADD CUBE\n        const geometry = new THREE.BoxGeometry(1, 1, 1)\n        const material = new THREE.MeshBasicMaterial({ color: '#433F81', wireframe:true })\n        this.cube = new THREE.Mesh(geometry, material)\n        this.scene.add(this.cube)\n    this.start()\n      }\n\n      componentWillUnmount(){\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n      }\n    start = () => {\n        if (!this.frameId) {\n          this.frameId = requestAnimationFrame(this.animate)\n        }\n      }\n    stop = () => {\n        cancelAnimationFrame(this.frameId)\n      }\n    animate = () => {\n       this.cube.rotation.x += 0.01\n       this.cube.rotation.y += 0.01\n       this.renderScene()\n       this.frameId = window.requestAnimationFrame(this.animate)\n     }\n    renderScene = () => {\n      this.renderer.render(this.scene, this.camera)\n    }\n    render(){\n        return(\n            <div\n            className=\"cubeContainer\"\n            style={{ width: window.innerWidth , height: window.innerHeight }}\n            ref={(mount) => { this.mount = mount }}\n          />\n        );\n    }\n}\nexport default CubeContainer;","import React from \"react\";\nimport * as THREE from \"three\";\n\nclass LineContainer extends React.Component {\n    componentDidMount() {\n        const width = window.innerWidth//this.mount.clientWidth\n        const height = window.innerHeight//this.mount.clientHeight\n        //ADD SCENE\n        this.scene = new THREE.Scene()\n        //ADD CAMERA\n        this.camera = new THREE.PerspectiveCamera(\n            45,\n            width / height,\n            1,\n            500\n        )\n        this.camera.position.set(0, 0, 100)\n        //ADD RENDERER\n        this.renderer = new THREE.WebGLRenderer()\n        this.renderer.setSize(width, height)\n        this.mount.appendChild(this.renderer.domElement)\n        //ADD LINE\n        var material = new THREE.LineBasicMaterial({ color: 0x0000ff })\n        var geometry = new THREE.Geometry();\n        geometry.vertices.push(new THREE.Vector3(-10, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(0, 10, 0));\n        geometry.vertices.push(new THREE.Vector3(10, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(0, -10, 0));\n        geometry.vertices.push(new THREE.Vector3(-10, 0, 0));\n\n        geometry.vertices.push(new THREE.Vector3(0, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(10, 10, 0));\n        geometry.vertices.push(new THREE.Vector3(0, 10, 0));\n        geometry.vertices.push(new THREE.Vector3(10, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(20, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(10, 10, 0));\n        geometry.vertices.push(new THREE.Vector3(0, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(10, -10, 0));\n        geometry.vertices.push(new THREE.Vector3(0, -10, 0));\n        geometry.vertices.push(new THREE.Vector3(10, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(20, 0, 0));\n        geometry.vertices.push(new THREE.Vector3(10,-10, 0));\n\n        this.line = new THREE.Line(geometry, material);\n        this.scene.add(this.line)\n        this.start()\n    }\n\n    componentWillUnmount() {\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n    }\n    start = () => {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n    stop = () => {\n        cancelAnimationFrame(this.frameId)\n    }\n    animate = () => {\n\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.animate)\n    }\n    renderScene = () => {\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return (\n            <div\n                className=\"cubeContainer\"\n                style={{ width: window.innerWidth, height: window.innerHeight }}\n                ref={(mount) => { this.mount = mount }}\n            />\n        );\n    }\n}\nexport default LineContainer;","import React from \"react\";\nimport * as THREE from \"three\";\nimport imge from '../../Assets/earth-dark.jpg'\nimport imge2 from '../../Assets/earth-topology.png' //earth-topology\nvar OrbitControls = require('three-orbit-controls')(THREE)\n\nclass CubeContainer extends React.Component {\n    componentDidMount() {\n        const width = window.innerWidth//this.mount.clientWidth\n        const height = window.innerHeight//this.mount.clientHeight\n        //ADD SCENE\n        this.scene = new THREE.Scene()\n        //ADD CAMERA\n        this.camera = new THREE.PerspectiveCamera(\n            50,\n            width / height,\n            0.1,\n            1000\n        )\n        this.camera.position.z = 4\n        //ADD RENDERER\n        this.renderer = new THREE.WebGLRenderer({ antialias: false })\n        // this.renderer.setClearColor('#000000')\n        this.renderer.setSize(width, height)\n        this.mount.appendChild(this.renderer.domElement)\n        //ADD CUBE\n        var directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n            directionalLight.position.set(1000,500 ,200)\n        this.scene.add(directionalLight); \n        var light = new THREE.AmbientLight( 0x404040, 5 ); // soft white light\n        this.scene.add( light );\n        var texture = new THREE.TextureLoader().load(imge);\n        var texture2 = new THREE.TextureLoader().load(imge2);\n        const geometry = new THREE.SphereGeometry(1, 50, 50);\n        const material = new THREE.MeshPhongMaterial({  \n            wireframe: false, \n            map: texture, \n            bumpMap: texture2,\n            bumpScale: 0.8\n        \n        })\n        this.cube = new THREE.Mesh(geometry, material)\n        this.scene.add(this.cube)\n        var controls = new OrbitControls( this.camera, this.renderer.domElement );\n        \n\n\n        this.start()\n    }\n\n    componentWillUnmount() {\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n    }\n    start = () => {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n    stop = () => {\n        cancelAnimationFrame(this.frameId)\n    }\n    animate = () => {\n        this.cube.rotation.x += 0.001\n        this.cube.rotation.y += 0.01\n        this.renderScene()\n        this.frameId = window.requestAnimationFrame(this.animate)\n    }\n    renderScene = () => {\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return (\n            <div\n                className=\"cubeContainer\"\n                style={{ width: window.innerWidth, height: window.innerHeight }}\n                ref={(mount) => { this.mount = mount }}\n                \n            >\n            </div>\n        );\n    }\n}\nexport default CubeContainer;","import React from \"react\";\nimport * as THREE from \"three\";\nimport imge from '../../Assets/earth-dark.jpg'\nimport imge2 from '../../Assets/earth-topology.png' //earth-topology\nvar OrbitControls = require('three-orbit-controls')(THREE)\n\nfunction _convertLatLonToVec3(lat, lon) {\n  lat = lat * Math.PI / 180.0;\n  lon = -lon * Math.PI / 180.0;\n  return new THREE.Vector3(\n    Math.cos(lat) * Math.cos(lon),\n    Math.sin(lat),\n    Math.cos(lat) * Math.sin(lon));\n}\n\nfunction InfoBox(city, radius, domElement) {\n  this._screenVector = new THREE.Vector3(0, 0, 0);\n\n  this.position = _convertLatLonToVec3(city.lat, city.lng).multiplyScalar(radius);\n\n  // create html overlay box\n  this.box = document.createElement('div');\n  this.box.innerHTML = city.name;\n  this.box.className = \"hudLabel\";\n\n  this.domElement = domElement;\n  this.domElement.appendChild(this.box);\n\n}\n\nInfoBox.prototype.update = function () {\n  this._screenVector.copy(this.position);\n  this._screenVector.project(this.camera);\n\n  var posx = Math.round((this._screenVector.x + 1) * this.domElement.offsetWidth / 2);\n  var posy = Math.round((1 - this._screenVector.y) * this.domElement.offsetHeight / 2);\n\n  var boundingRect = this.box.getBoundingClientRect();\n\n  // update the box overlays position\n  this.box.style.left = (posx - boundingRect.width) + 'px';\n  this.box.style.top = posy + 'px';\n};\n\n//--------------------------------\nfunction Marker(lat,lng, index) {\n  THREE.Object3D.call(this);\n\n  var radius = 0.005;\n  var sphereRadius = 0.02;\n  var height = 0.5;\n\n  // var material = new THREE.MeshPhongMaterial({\n  //   color: \"#E36009\"\n  // });\n\n  var material = new THREE.LineBasicMaterial( {\n    color: 0xff6600,\n    linewidth: 1,\n    linecap: 'round', //ignored by WebGLRenderer\n    linejoin:  'round' //ignored by WebGLRenderer,\n\n  } );\n  var cone = new THREE.Mesh(new THREE.ConeBufferGeometry(radius, height, 8, 1, true), material);\n  cone.position.y = height * 0.5;\n  cone.rotation.x = Math.PI;\n  cone.userData = {index: index, lat: lat, lng: lng}\n  var sphere = new THREE.Mesh(new THREE.SphereBufferGeometry(sphereRadius, 16, 8), material);\n  sphere.position.y = height * 0.95 + sphereRadius;\n\n\n  this.add(cone);\n}\n\nMarker.prototype = Object.create(THREE.Object3D.prototype);\n\n// ------ Earth object -------------------------------------------------\n\nfunction Earth(radius, texture, texture2) {\n  THREE.Object3D.call(this);\n\n  this.userData.radius = radius;\n\n  var earth = new THREE.Mesh(\n    new THREE.SphereBufferGeometry(radius, 64.0, 48.0),\n    new THREE.MeshPhongMaterial({\n      map: texture,\n      color: \"#66a3ff\",\n      bumpMap: texture2,\n      bumpScale: 0.2,\n      \n    })\n  );\n\n  this.add(earth);\n}\nvar markerarry = [];\nEarth.prototype = Object.create(THREE.Object3D.prototype);\n\nEarth.prototype.createMarker = function (lat, lon, index) {\n  var marker = new Marker(lat,lon,index);\n\n  var latRad = lat * (Math.PI / 180);\n  var lonRad = -lon * (Math.PI / 180);\n  var r = this.userData.radius;\n\n  marker.position.set(Math.cos(latRad) * Math.cos(lonRad) * r, Math.sin(latRad) * r, Math.cos(latRad) * Math.sin(lonRad) * r);\n  marker.rotation.set(0.0, -lonRad, latRad - Math.PI * 0.5);\n\n  this.add(marker);\n};\n\n\n\nclass CubeContainer extends React.Component {\n  componentDidMount() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    //ADD SCENE\n    this.scene = new THREE.Scene()\n    //ADD CAMERA\n    this.camera = new THREE.PerspectiveCamera(\n      50,\n      width / height,\n      0.1,\n      1000\n    )\n    this.camera.position.z = 4\n    //ADD RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true })\n    this.renderer.setClearColor('#918e8e')\n    this.renderer.setSize(width, height)\n    this.mount.appendChild(this.renderer.domElement)\n    //ADD CUBE\n    var directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    directionalLight.position.set(1000, 500, 200)\n    this.scene.add(directionalLight);\n    var light = new THREE.AmbientLight(0x404040, 10); // soft white light\n    this.scene.add(light);\n    var texture = new THREE.TextureLoader().load(imge);\n    var texture2 = new THREE.TextureLoader().load(imge2);\n\n    var controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.earth = new Earth(1.0, texture2, texture);\n    this.earth.createMarker(48.856700, 2.350800, 1); // Paris\n    this.earth.createMarker(51.507222, -0.1275, 2); // London\n    this.earth.createMarker(34.050000, -118.250000,3); // LA\n    this.earth.createMarker(41.836944, -87.684722,4); // Chicago\n    this.earth.createMarker(35.683333, 139.683333,5); // Tokyo\n    this.earth.createMarker(33.333333, 44.383333,6); // Baghdad\n    this.earth.createMarker(40.712700, -74.005900,7); // New York\n\n    this.earth.createMarker(55.750000, 37.616667,8); // Moscow\n    this.earth.createMarker(35.117500, -89.971111,9); // Memphis\n    this.earth.createMarker(-33.925278, 18.423889,10); // Cape Town\n    this.earth.createMarker(32.775833, -96.796667,11); // Dallas\n    this.earth.createMarker(52.366667, 4.900000,12); // Amsterdam\n    this.earth.createMarker(42.358056, -71.063611,13); // Boston\n    this.earth.createMarker(52.507222, 13.145833,14); // Berlin\n    this.earth.createMarker(18.5204, 73.8567,15); // pune\n\n    // this.earth.createMarker(37.783333, -122.416667); // San Francisco\n    this.scene.add(this.earth)\n\n\n      //----------------\n      window.addEventListener('click', this.onmousemove)\n\n    this.start()\n  }\n  onmousemove = (event) => {\n    const rect = this.renderer.domElement.getBoundingClientRect();\n    const left = event.clientX - rect.left;\n    const top = event.clientY - rect.top;\n  \n    const x = (left / rect.width) * 2 - 1;\n    const y = - (top / rect.height) * 2 + 1;\n    \n    const raycaster = new THREE.Raycaster();\n    raycaster.ray.origin.setFromMatrixPosition(this.camera.matrixWorld);\n    raycaster.ray.direction.set(x, y, 0.5).unproject(this.camera).sub(raycaster.ray.origin).normalize();\n    \n    const intersects = raycaster.intersectObjects(this.earth.children, true);\n    if(intersects.length > 0) {\n      if(intersects[0].object.geometry.type === \"ConeBufferGeometry\"){\n        \n        if(!intersects[0].object.clicked){\n          intersects[0].object.material.color.setHex(0xff0000)\n          intersects[0].object.clicked = true\n        } else {\n          intersects[0].object.material.color.setHex(0xff6600)\n          intersects[0].object.clicked = false\n        }\n        const {userData} = intersects[0].object;\n        // alert(`Marker:${userData.index}  Latitude: ${userData.lat} Longitude:${userData.lng}`)\n        \n      }\n    }\n  }\n  componentWillUnmount() {\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n  stop = () => {\n    cancelAnimationFrame(this.frameId)\n  }\n  animate = () => {\n    this.earth.rotation.x += 0.00001\n    this.earth.rotation.y += 0.0009\n    this.renderScene()\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera)\n  }\n  render() {\n    return (\n      <div\n        className=\"cubeContainer\"\n        style={{ width: window.innerWidth, height: window.innerHeight }}\n        ref={(mount) => { this.mount = mount }}\n\n      >\n      </div>\n    );\n  }\n}\nexport default CubeContainer;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ExampleContainer from \"./ExamplesContainer\";\nimport Cube from \"./Components/Cube\";\nimport Line from \"./Components/Line\";\nimport Globe from \"./Components/Globe\";\nimport Marker from \"./Components/Marker\";\n\nconst index = ( {match} ) => {\n    return(\n        <Switch>\n            <Route path={`${match.path}/line`} component={Line}></Route>\n            <Route path={`${match.path}/cube`} component={Cube}></Route>\n            <Route path={`${match.path}/globe`} component={Globe}></Route>\n            <Route path={`${match.path}/marker`} component={Marker}></Route>\n            <Route path={\"/\"} component={ExampleContainer} ></Route>\n        </Switch>\n    );\n}\n\nexport default index;","import React from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport ExampleContainer from \"./Examples\";\n\nclass ViewContainer extends React.Component {\n    render() {\n        return (\n            <div>\n                {/* <Redirect to={\"/examples\"} /> */}\n                <Link to=\"/examples\" >Go to examples</Link>\n                <Switch>\n                    <Route path={\"/examples\"} component={ExampleContainer}></Route>\n                    {/* <Redirect from=\"/\" to=\"/examples\" ></Redirect>     */}\n                </Switch>\n\n            </div>\n        );\n    }\n}\n\nexport default ViewContainer;","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport './App.css';\nimport ViewContainer from \"./View\";\nimport PWAPrompt from 'react-ios-pwa-prompt'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <PWAPrompt />\n\n        <Route path={\"/\"} component={ViewContainer} ></Route>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render( <BrowserRouter><App /></BrowserRouter> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}